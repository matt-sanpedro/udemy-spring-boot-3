# INVERSION OF CONTROL #
Inversion of Control (IoC): the approach of outsourcing the construction and management of objects

Spring Containers works like an object factory
There are two primary functions:
	1. Create and manage objects (Inversion of Control)
	2. Inject object dependencies (Dependency Injection)

Spring Containers can be configured by:
	1. [legacy] XML configuration file
	2. [modern] Java Annotations
	3. [modern] Java Source Code

# DEPENDENCY INJECTION #
Inversion Principle: the client delegates to another object the responsibility of providing its dependencies

Multiple injection types in Spring, recommended types are:
	1. Constructor Injection
	2. Setter Injection

When to use:
        1. Constructor Injection 
		- for required dependencies
		- generally recommended by spring.io development team as first choice
        2. Setter Injection 
		- for optional dependencies
		- app can provide default logic if dependency is not provided

Spring AutoWiring
	- will look for class that matches by type: class or interface
	- inject it automatically, hence "AutoWired"
	- Spring will scan for @Components


